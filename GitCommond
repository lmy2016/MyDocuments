git init   #把一个目录变成git可管理的仓库

git add    #在仓库中增加一个文件

git commit  -m "log"   #将add后的文件提交至仓库管理

git status  #查看仓库当前状态，如：哪些文件做了修改

git diff <文件>  #查看一个文件具体哪些地方做了修改

git reset --hard commit_id    #版本回退到commit_id

git log    #查看提交历史，以便确定要回退到哪个版本
git reflog    #查看命令历史，以便回到未来的哪个版本,之后同样适用命令：git reset

git status  #查看暂存区的修改状态

工作区 --git add--> 暂存区  --git commit-->  master

git diff hash1 hash2 <文件名> #查看两个版本之间的差异

git checkout -- file   #将工作区的修改撤销（1 暂存区有内容，会回退到暂存区最新状态 2 暂存区无内容，则回退到版本最新状态）

git reset HEAD file    #撤销暂存区的修改

git rm file
git commit file -m ""  #删除文件并提交


##############本地创建仓库，第一次提交到远程仓库的方法##################

git init
git add .
git commit -m ""
git remote add origin 远程仓库地址
git pull origin master --allow-unrelated-histories  #--allow-unrelated-histories表示合并两个独立启动的仓库的历史，git pull命令相当于git fetch和git merge的集合
git push -u origin master   #将本地修改推送到远程仓库，第二次提交将不需要-u命令

########################################################################

#远程仓库重命名后，本地仓库修改命令
git remote set-url origin newAddress #方法一
#方法二：先删除后新增
git remote rm origin
git remote add origin newAddress     

git clone 远端仓库地址   #克隆

git branch  #查看分支
git checkout -d <name>  #删除分支
git merge <name>  #合并修改
git checkout 分支名 #切换分支
git branch 分支名   #新建分支
git checkout -b 分支名   #新建并切换分支

##############多人协作###################

人员1：
git clone 远程仓库地址
#由于clone后本地之后master分支，故需要执行命令链接dev分支
git checkout -b dev origin/dev
#修改后将修改推送至远程仓库
git push origin dev

人员2：
#在基于人员1修改前的分支修改，人员1已将修改推送至远端仓库，人员2此时也需要推送自己的修改
git push origin dev
#执行后报错，提示需要git pull，故执行git pull
git pull
#仍然报错，原因是没有指定本地dev与远端origin/dev之间的连接，按提示执行命令
git branch --set-upstream-to=origin/dev dev
#然后继续执行git pull
git pull
#提示有冲突，解决冲突后提交修改
git commint -m ""
#推送修改至远程仓库
git push origin dev

#########################################

git stash         #缓存未提交的内容
git stash list    #显示缓存记录
git stash apply   #恢复缓存的内容
git stash drop    #删除缓存记录
git stash pop     #恢复内容并删除缓存记录

git tag <tagName>       #创建一个标签
git tag -d <tagName>    #删除一个标签
git tag                 #查看有哪些标签
git push origin --tags  #将本地标签推送至远程
git push origin :refs/tags/<tagname>  #删除远程的标签


